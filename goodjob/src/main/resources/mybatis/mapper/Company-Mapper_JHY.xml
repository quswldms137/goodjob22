<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.example.goodjob.dao.ICompanyDao_JHY">
	
	<!-- 내가 쓴 채용공고 목록 조회하기 (지금은 로그인 연동 X -> 등록된 채용공고 전부다 불러옴)-->
	<select id="findAll">
		SELECT r.title, r.career, r.education, r.location, 
				r.FIELD, r.RANK, r.pay, r.deadline_date, 
				r.recruit_no, r.com_no, cd.com_detail_no 
				FROM recruit r
		LEFT JOIN company_detail cd
		ON r.com_no = cd.com_no 
	</select>
	
	<!-- com_no 로 받아서 내가 쓴 채용공고 목록 조회용 -->
	<select id="findByCom_no">
		select * from recruit where com_no = #{com_no}
	</select>
	
	<!-- 내가 쓴 채용공고 목록 조회하기 -->
	<select id="findMyRecruit">
		SELECT title, career, education, location, RANK, pay, DATEDIFF(deadline_date, NOW()) 'deadline_date' from recruit
	</select>
	
	<!-- 제일 최근에 등록한 채용공고 조회 -->
	<select id="findLatest">
		select * from recruit where com_no = #{com_no} order by reg_date desc
	</select>
	
	<!-- 채용공고에 등록된 요구스킬 조회 -->
	<select id="findSkillListByRecruit_no">
		select skill_name from c_skill where recruit_no = #{recruit_no}
	</select>
	
	<!-- 채용공고 번호로 특정 채용공고 정보 조회 -->
	<select id="findByRecruit_no">
		select * from recruit where recruit_no = #{recruit_no}
	</select>
	
	<!-- username 으로 com_no 받아오기 -->
	<select id="findByUsername">
		select com_no from company where username = #{username}
	</select>
	
	<!-- 로그인시 저장된 회사번호로 채용공고 조회 -->
	<select id="findRecruitList">
		SELECT r.title, r.career, r.education, r.location, 
				r.FIELD, r.RANK, r.pay, r.deadline_date, 
				r.recruit_no, r.com_no, cd.com_detail_no 
				FROM recruit r
		LEFT JOIN company_detail cd
		ON r.com_no = cd.com_no 
		WHERE r.com_no = #{com_no}
	</select>
	
	<!-- 이력서 번호로 이력서에 등록된 스킬을 조회해서 스킬 이름 받아오기 -->
	<select id="findByResume_no">
		select sk_name from skill where resume_no = #{resume_no}
	</select>
	
	
	<!-- 채용공고 등록하기 -->
	<insert id="recruitWrite">
		insert into recruit values (null, #{recruit.com_no}, #{recruit.career}, #{recruit.education}, 
									#{recruit.field}, #{recruit.pay}, #{recruit.location}, #{recruit.working_time}, 
									#{recruit.rank}, #{recruit.title}, #{recruit.qualification}, #{recruit.welfare}, 
									#{recruit.seprocedure}, #{recruit.notice}, CURRENT_TIMESTAMP, 
									#{recruit.deadline_date}, #{recruit.p_number}, #{recruit.recruit_intro})
	</insert>
	<!-- 채용공고 요구 스킬 등록 -->
	<insert id="regSkill">
		insert into c_skill values (null, #{recruit_no}, #{skill})
	</insert>
	
	<!-- 채용공고 수정하기 -->
	<update id="updateRecruit">
		update recruit set career = #{recruit.career}, education = #{recruit.education}, 
							field = #{recruit.field}, pay = #{recruit.pay}, location = #{recruit.location}, 
							working_time = '${recruit.working_time}', rank = #{recruit.rank}, 
							title = #{recruit.title}, qualification = #{recruit.qualification}, 
							welfare = #{recruit.welfare}, seprocedure = #{recruit.seprocedure}, 
							notice = #{recruit.notice}, deadline_date = #{recruit.deadline_date}, 
							p_number = #{recruit.p_number}, recruit_intro = #{recruit.recruit_intro} 
							where recruit_no = #{recruit.recruit_no}
	</update>
	
	
	
	<!-- 특정 채용공고 삭제 -->
	<delete id="delete">
		delete from recruit where recruit_no = #{recruit_no}
	</delete>
	
	<!-- 채용공고 수정시 등록되있던 스킬 정보 리셋 (삭제용)-->
	<delete id="deleteC_skill">
		delete from c_skill where recruit_no = #{recruit_no}
	</delete>
	
</mapper>  